env:
  JAVAFX_VERSION: 21.0.1
  JAVA_VERSION: '21'
jobs:
  early-access:
    if: endsWith(${{ needs.precheck.outputs.PROJECT_VERSION }}, '-SNAPSHOT')
    needs:
    - precheck
    - linux-bundles
    - windows-bundles
    - mac-bundles
    - mac_aarch64-bundles
    - kit-bundles
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Download all build artifacts
      uses: actions/download-artifact@v2
    - continue-on-error: true
      name: Set up Java
      uses: oracle-actions/setup-java@v1
      with:
        release: ${{ needs.precheck.outputs.JAVA_VERSION }}
        website: jdk.java.net
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      env:
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Release with JReleaser
      run: 'mvn -B -ntp -pl :parent -DartifactsDir=artifacts jreleaser:release

        '
    - continue-on-error: true
      if: always()
      name: JReleaser output
      uses: actions/upload-artifact@v2
      with:
        name: jreleaser-logs
        path: 'target/jreleaser/trace.log

          target/jreleaser/output.properties

          '
  kit-bundles:
    needs:
    - precheck
    uses: gluonhq/scenebuilder/.github/workflows/bundles-kit.yml@master
    with:
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      project-version: ${{ needs.precheck.outputs.PROJECT_VERSION }}
  linux-bundles:
    needs:
    - precheck
    uses: gluonhq/scenebuilder/.github/workflows/bundles-linux.yml@master
    with:
      app-version: ${{ needs.precheck.outputs.APP_VERSION }}
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      javafx-version: ${{ needs.precheck.outputs.JAVAFX_VERSION }}
      project-version: ${{ needs.precheck.outputs.PROJECT_VERSION }}
      test: true
  mac-bundles:
    needs:
    - precheck
    secrets:
      CERTIFICATES_FILE_BASE64: ${{ secrets.CERTIFICATES_FILE_BASE64 }}
      CERTIFICATES_PASSWORD: ${{ secrets.CERTIFICATES_PASSWORD }}
      MACSIGN_PREFIX: ${{ secrets.GLUON_MACSIGN_PREFIX }}
      MACSIGN_USER: ${{ secrets.GLUON_MACSIGN_USER }}
      NOTARIZATION_PASSWORD: ${{ secrets.NOTARIZATION_PASSWORD }}
      NOTARIZATION_USERNAME: ${{ secrets.NOTARIZATION_USERNAME }}
    uses: gluonhq/scenebuilder/.github/workflows/bundles-mac.yml@master
    with:
      app-version: ${{ needs.precheck.outputs.APP_VERSION }}
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      javafx-version: ${{ needs.precheck.outputs.JAVAFX_VERSION }}
      project-version: ${{ needs.precheck.outputs.PROJECT_VERSION }}
      test: true
  mac_aarch64-bundles:
    needs:
    - precheck
    secrets:
      CERTIFICATES_FILE_BASE64: ${{ secrets.CERTIFICATES_FILE_BASE64 }}
      CERTIFICATES_PASSWORD: ${{ secrets.CERTIFICATES_PASSWORD }}
      MACSIGN_PREFIX: ${{ secrets.GLUON_MACSIGN_PREFIX }}
      MACSIGN_USER: ${{ secrets.GLUON_MACSIGN_USER }}
      NOTARIZATION_PASSWORD: ${{ secrets.NOTARIZATION_PASSWORD }}
      NOTARIZATION_USERNAME: ${{ secrets.NOTARIZATION_USERNAME }}
    uses: gluonhq/scenebuilder/.github/workflows/bundles-mac_aarch64.yml@master
    with:
      app-version: ${{ needs.precheck.outputs.APP_VERSION }}
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      javafx-version: ${{ needs.precheck.outputs.JAVAFX_VERSION }}
      project-version: ${{ needs.precheck.outputs.PROJECT_VERSION }}
      test: true
  precheck:
    if: startsWith(github.event.head_commit.message, 'Releasing version') != true
    outputs:
      APP_VERSION: ${{ steps.vars.outputs.APP_VERSION }}
      JAVAFX_VERSION: ${{ env.JAVAFX_VERSION }}
      JAVA_VERSION: ${{ env.JAVA_VERSION }}
      PROJECT_VERSION: ${{ steps.vars.outputs.PROJECT_VERSION }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out repository
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up Java
      uses: oracle-actions/setup-java@v1
      with:
        release: ${{ env.JAVA_VERSION }}
        website: jdk.java.net
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      id: vars
      name: Set environment
      run: 'PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

        APP_VERSION=$PROJECT_VERSION

        APP_VERSION=${APP_VERSION%-*}

        echo ::set-output name=APP_VERSION::$APP_VERSION

        echo ::set-output name=PROJECT_VERSION::$PROJECT_VERSION

        '
      shell: bash
  windows-bundles:
    needs:
    - precheck
    secrets:
      WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_CERTIFICATE }}
      WINDOWS_CERTNAME: ${{ secrets.WINDOWS_CERTNAME }}
      WINDOWS_PASSWORD: ${{ secrets.WINDOWS_PASSWORD }}
    uses: gluonhq/scenebuilder/.github/workflows/bundles-windows.yml@master
    with:
      app-version: ${{ needs.precheck.outputs.APP_VERSION }}
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      javafx-version: ${{ needs.precheck.outputs.JAVAFX_VERSION }}
      project-version: ${{ needs.precheck.outputs.PROJECT_VERSION }}
      test: true
name: Early Access
on:
  repository_dispatch:
    types: trigger-ga___early-access.yml
